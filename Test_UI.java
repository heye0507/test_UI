/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package test_UI;
import java.io.*;
import java.net.*;
/**
 *
 * @author HHJJ
 */
public class Test_UI extends javax.swing.JFrame {

    /**
     * Creates new form Test_UI
     */
    public Test_UI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_IP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_PORT = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_RESULT = new javax.swing.JTextArea();
        but_login = new javax.swing.JButton();
        but_status = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_USERNAME = new javax.swing.JTextField();
        txt_SECRET = new javax.swing.JTextField();
        but_QueueStatus = new javax.swing.JButton();
        but_logoff = new javax.swing.JButton();
        but_corestatus = new javax.swing.JButton();
        but_agents = new javax.swing.JButton();
        but_hangup = new javax.swing.JButton();
        but_parkedcall = new javax.swing.JButton();
        but_queues = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("UCM AMI DEMO");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "UCM AMI DEMO v1.0", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel1.setText("IP Address");

        txt_IP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_IPActionPerformed(evt);
            }
        });

        jLabel2.setText("PORT");

        txt_RESULT.setColumns(20);
        txt_RESULT.setRows(5);
        txt_RESULT.setText("Result");
        txt_RESULT.setFocusable(false);
        jScrollPane1.setViewportView(txt_RESULT);

        but_login.setText("Log in");
        but_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_loginActionPerformed(evt);
            }
        });

        but_status.setText("Status");
        but_status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_statusActionPerformed(evt);
            }
        });

        jLabel3.setText("Username");

        jLabel4.setText("Password");

        but_QueueStatus.setText("Queue Status");
        but_QueueStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_QueueStatusActionPerformed(evt);
            }
        });

        but_logoff.setText("Log off");
        but_logoff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_logoffActionPerformed(evt);
            }
        });

        but_corestatus.setText("Core Status");
        but_corestatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_corestatusActionPerformed(evt);
            }
        });

        but_agents.setText("List Agents");
        but_agents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_agentsActionPerformed(evt);
            }
        });

        but_hangup.setText("Hangup");

        but_parkedcall.setText("Parked Call");

        but_queues.setText("Queues");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 847, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(but_status)
                                    .addComponent(but_queues))
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txt_IP, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                                        .addComponent(txt_USERNAME)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(but_hangup)
                                            .addGap(18, 18, 18)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(but_QueueStatus))))
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_PORT, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(txt_SECRET))
                                .addGap(18, 18, 18)
                                .addComponent(but_login))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(but_agents)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(but_parkedcall)
                                        .addGap(28, 28, 28)
                                        .addComponent(but_corestatus)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(but_logoff)))))
                .addContainerGap(313, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_IP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txt_PORT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(txt_USERNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_SECRET, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_login))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_status)
                    .addComponent(but_agents)
                    .addComponent(but_hangup))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_logoff)
                    .addComponent(but_QueueStatus)
                    .addComponent(but_parkedcall)
                    .addComponent(but_queues)
                    .addComponent(but_corestatus))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleName("UCM AMI DEMO 1.0");

        setSize(new java.awt.Dimension(1160, 613));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_IPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_IPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_IPActionPerformed

    private void but_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_loginActionPerformed
        // TODO add your handling code here:
        hostName=txt_IP.getText();//load IP address from user input
        port=Integer.parseInt(txt_PORT.getText());//cast port to int
        recvtimer=500;
        String username=txt_USERNAME.getText();
        String password=txt_SECRET.getText();
        //hostName="192.168.40.133";
        //port=7777;
        try{
                client_sock=new Socket(hostName,port);
                out=new PrintWriter(client_sock.getOutputStream(),true);
                in=new BufferedReader(new InputStreamReader(client_sock.getInputStream()));
           
                ///////////
                //java will took of the last \n in the recv string
                /////////////////////////
            String fromServer="";
            
            //String username="ucmamiuser1";
            //String password="ucmamiuser1";
            String recv_string="";
            String toServer="action:login\nusername:"+username+"\nsecret:"+password+"\n";

            out.println(toServer);
            
            try{
            client_sock.setSoTimeout(recvtimer);
            while((fromServer=in.readLine())!=null){
                recv_string+="\n"+fromServer;
            }
            }catch (SocketTimeoutException ste){
                
            txt_RESULT.setText("GOT: "+ recv_string);
           }
           // txt_RESULT.setText("GOT: "+ recv_string);
           
           // in.close();
            //out.close();
            //client_sock.close();   
        }catch (Exception e){
            txt_RESULT.setText("Login Error.");
        }
    }//GEN-LAST:event_but_loginActionPerformed

    private void but_statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_statusActionPerformed
        // TODO add your handling code here:
        try{
       String fromServer="";
       String recv_string="";
       String to_server="action:status\n";
       out.flush();
       out.println(to_server);

       /*while (true){
           
            while(in.ready()){
                fromServer=in.readLine();
                recv_string+="\n"+fromServer;
                //System.out.println(recv_string);
            }
            if(fromServer.length()==0)
                    break;
            }
            txt_RESULT.setText("GOT: "+ recv_string);*/
            try{
            client_sock.setSoTimeout(recvtimer);
            while((fromServer=in.readLine())!=null){
                recv_string+="\n"+fromServer;
            }
            }catch (SocketTimeoutException ste){
                
            txt_RESULT.setText("GOT: "+ recv_string);
        }
        }catch (Exception e){
            txt_RESULT.setText("Status Error: you must first log in.\n");
        }
       
    }//GEN-LAST:event_but_statusActionPerformed

    private void but_QueueStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_QueueStatusActionPerformed
        // TODO add your handling code here:
        try{
       String fromServer="";
       String recv_string="";
       String to_server="action:queuestatus\n";
       out.flush();
       out.println(to_server);
       /*while (true){
           
            while(in.ready()){
                fromServer=in.readLine();
                recv_string+="\n"+fromServer;
                //System.out.println(recv_string);
            }
            if(fromServer.length()==0)
                    break;
            }
            txt_RESULT.setText("GOT: "+ recv_string);*/
        try{
            client_sock.setSoTimeout(recvtimer);
            while((fromServer=in.readLine())!=null){
                recv_string+="\n"+fromServer;
            }
            }catch (SocketTimeoutException ste){
                
            txt_RESULT.setText("GOT: "+ recv_string);
        }     
           
        }catch (Exception e){
            txt_RESULT.setText("QueueStatus Error: you must first log in.\n");
        }
    }//GEN-LAST:event_but_QueueStatusActionPerformed

    private void but_corestatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_corestatusActionPerformed
        // TODO add your handling code here:
        try{
       String fromServer="";
       String recv_string="";
       String to_server="action:corestatus\n";
       out.flush();
       out.println(to_server);
      
       /*while (true){
           
            while(in.ready()){
                fromServer=in.readLine();
                recv_string+="\n"+fromServer;
                //System.out.println(recv_string);
            }
            if(fromServer.length()==0)
                    break;
            }
            txt_RESULT.setText("GOT: "+ recv_string);*/
       
       try{
            client_sock.setSoTimeout(recvtimer);
            while((fromServer=in.readLine())!=null){
                recv_string+="\n"+fromServer;
            }
            }catch (SocketTimeoutException ste){
                
            txt_RESULT.setText("GOT: "+ recv_string);
        }
        }catch (Exception e){
            txt_RESULT.setText("CoreStatus Error: you must first log in.\n");
        }
    }//GEN-LAST:event_but_corestatusActionPerformed

    private void but_agentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_agentsActionPerformed
        // TODO add your handling code here:
        try{
       String fromServer="";
       String recv_string="";
       String to_server="action:agents\n";
       out.flush();
       out.println(to_server);

       /*while (true){
           
            while(in.ready()){
                fromServer=in.readLine();
                recv_string+="\n"+fromServer;
                //System.out.println(recv_string);
            }
            if(fromServer.length()==0)
                    break;
            }
            txt_RESULT.setText("GOT: "+ recv_string);*/
       try{
            client_sock.setSoTimeout(recvtimer);
            while((fromServer=in.readLine())!=null){
                recv_string+="\n"+fromServer;
            }
            }catch (SocketTimeoutException ste){
                
            txt_RESULT.setText("GOT: "+ recv_string);
        }
        }catch (Exception e){
            txt_RESULT.setText("ListAgents Error: you must first log in.\n");
        }
    }//GEN-LAST:event_but_agentsActionPerformed

    private void but_logoffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_logoffActionPerformed
        // TODO add your handling code here:
        try{
       String fromServer="";
       String recv_string="";
       String to_server="action:logoff\n";
       out.flush();
       out.println(to_server);

              while((fromServer=in.readLine())!=null){
                recv_string+="\n"+fromServer;
                //System.out.println(recv_string);
            }                
            txt_RESULT.setText("GOT: "+ recv_string);
            in.close();
            out.close();
            client_sock.close();  
            
        }catch (Exception e){
            txt_RESULT.setText("Logoff Error: you must first log in.\n");
        }
    }//GEN-LAST:event_but_logoffActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Test_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Test_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Test_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Test_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Test_UI().setVisible(true);
            }
        });
    }
    public static String hostName;
    public static int port;
    public static Socket client_sock;
    public static PrintWriter out;
    public static BufferedReader in;
    public int recvtimer;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_QueueStatus;
    private javax.swing.JButton but_agents;
    private javax.swing.JButton but_corestatus;
    private javax.swing.JButton but_hangup;
    private javax.swing.JButton but_login;
    private javax.swing.JButton but_logoff;
    private javax.swing.JButton but_parkedcall;
    private javax.swing.JButton but_queues;
    private javax.swing.JButton but_status;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_IP;
    private javax.swing.JTextField txt_PORT;
    private javax.swing.JTextArea txt_RESULT;
    private javax.swing.JTextField txt_SECRET;
    private javax.swing.JTextField txt_USERNAME;
    // End of variables declaration//GEN-END:variables
}
